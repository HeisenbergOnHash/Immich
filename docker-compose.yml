

volumes:
  immich_postgres_data:  # Docker-managed volume for PostgreSQL data
  base-smb:              # Keep the SMB volume if you want to use it for file uploads
    driver: local
    driver_opts:
      type: cifs
      o: username=${SMB_USERNAME},password=${SMB_PASSWORD},vers=3.0
      device: "//${SMB_SERVER}/test-immich"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - base-smb:/usr/src/app/upload:rw  
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - '8085:8085'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    labels:
      - com.centurylinklabs.watchtower.enable=true

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - base-smb:/cache:rw  # Removed subdir option
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
    labels:
      - com.centurylinklabs.watchtower.enable=true

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - immich_postgres_data:/var/lib/postgresql/data:rw  # Use Docker-managed volume
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$${user}", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
